데이터 교환 포맷은 서로 다른 시스템 간에 데이터를 효율적으로 주고받기 위해 정해진 형식과 규칙을 말합니다.
대표적으로  JSON, XML, CSV 등이 있습니다.

직렬화(Serialization)란
데이터 시리얼라이제이션이란, 어떤 환경의 데이터 구조를 다른 환경에 전송 및 저장하기 위해 나중에 재구성할 수 있는 바이트의 포맷으로 변환하는 과정을 말합니다.

JSON은 JavaScript Object Notation의 약자로, 키(key)-값(value) 쌍으로 데이터를 저장하고 전송하는 데 사용되는 경량의 데이터 교환 형식입니다. 사람이 읽고 쓰기 쉬우며, 
기계가 구문 분석하고 생성하기도 쉬운 텍스트 기반의 표준 포맷입니다.

JSON의 특징
텍스트 기반: 일반 텍스트로 이루어져 있어 거의 모든 프로그래밍 언어에서 읽고 생성할 수 있습니다.
언어 독립적: 자바스크립트 문법에서 파생되었지만, 자바스크립트 전용은 아닙니다. C, C++, C#, 자바, 파이썬 등 다양한 언어에서 JSON 데이터를 처리하기 위한 라이브러리를 제공합니다.
가볍고 빠름: XML보다 간결한 문법을 가지고 있어 데이터 전송 속도가 빠르고 구문 분석이 간단합니다. 

JSON의 구조
JSON 데이터는 주로 두 가지 구조로 이루어집니다. 
객체(Object): 중괄호({ })로 묶으며, 쉼표(,)로 구분된 키-값 쌍의 모음입니다. 키는 반드시 큰따옴표로 묶인 문자열이어야 합니다.
배열(Array): 대괄호([ ])로 묶으며, 순서가 있는 값들의 목록입니다. 값에는 문자열, 숫자, 불리언, 객체, 배열, 또는 null이 올 수 있습니다. 

지원하는 데이터 타입
문자열(String): 큰따옴표로 묶인 유니코드 문자열.
숫자(Number): 정수 또는 부동소수점 숫자.
부울(Boolean): true 또는 false.
객체(Object): 중괄호({ })로 묶인 키-값 쌍.
배열(Array): 대괄호([ ])로 묶인 값들의 목록.
null: 값이 없음을 나타내는 null

XML(eXtensible Markup Language)은 데이터를 저장하고 전송하는 데 사용되는 마크업 언어입니다. 
HTML과 비슷하게 태그를 사용하지만, 미리 정의된 태그가 있는 HTML과 달리 사용자가 필요에 따라 고유한 태그를 정의할 수 있어 유연성이 높습니다. 
XML은 데이터를 구조화하고 정리하며, 사람과 기계 모두가 읽기 쉬운 형식으로 작성됩니다.

XML의 특징
확장 가능(Extensible): 사용자가 자신의 필요에 맞춰 태그를 직접 정의할 수 있습니다. 예를 들어, 책 정보를 저장할 때 <book>, <title>, <author>와 같은 태그를 직접 만들 수 있습니다.
자기 기술적(Self-Descriptive): 태그가 데이터의 내용을 설명하므로 데이터 자체에 구조와 의미가 내포되어 있습니다. 이는 데이터를 별도로 설명할 필요 없이 이해할 수 있게 합니다.
데이터 보존 및 전송 : 데이터를 표시하는 데 중점을 둔 HTML과 달리, XML의 주된 목적은 데이터를 저장하고 한 시스템에서 다른 시스템으로 전송하는 것입니다.
플랫폼 독립적: 특정 하드웨어나 소프트웨어에 종속되지 않습니다. 이로 인해 다양한 시스템 간에 데이터를 쉽게 교환할 수 있습니다.
엄격한 문법: XML은 HTML보다 훨씬 엄격한 문법 규칙을 따릅니다. 예를 들어, 모든 시작 태그는 반드시 닫는 태그가 있어야 하며, 태그는 대소문자를 구분합니다. 문법 오류가 있는 문서는 올바르게 처리되지 않습니다. 

XML의 장점과 단점
장점:
확장성: 사용자 정의 태그를 통해 다양한 종류의 데이터를 표현할 수 있습니다.
독립성: 특정 플랫폼이나 프로그래밍 언어에 얽매이지 않습니다.
읽기 쉬움: 텍스트 기반이라 사람이 쉽게 읽고 이해할 수 있습니다. 
단점:
장황함(Verbose): 데이터를 표현하는 데 많은 태그가 사용되므로 파일 크기가 커집니다. 특히 JSON과 같은 다른 데이터 형식에 비해 상대적으로 불필요한 내용이 많아 저장 및 전송 비용이 더 들 수 있습니다.
비효율성: 이진 파일 형식에 비해 상대적으로 비효율적입니다. 대용량 데이터 처리에는 적합하지 않을 수 있습니다.

YAML은 'YAML Ain't Markup Language'의 약자로, 사람이 읽기 쉬운 데이터 직렬화 언어입니다. 
들여쓰기를 사용하여 데이터의 계층적 구조를 나타내며, 설정 파일이나 데이터 교환에 널리 사용됩니다.

YAML의 주요 특징
1. 높은 가독성: JSON이나 XML과 달리 중괄호, 쉼표, 닫기 태그 같은 부가적인 기호를 최소화하고, 파이썬과 유사한 들여쓰기로 구조를 표현하여 사람이 읽고 이해하기 쉽습니다.
2. 주석 지원: # 기호를 사용하여 코드에 대한 설명을 추가할 수 있어, 설정 파일의 의도를 명확히 파악하는 데 도움이 됩니다. JSON은 주석을 지원하지 않습니다.
3. 다양한 데이터 타입: 문자열, 정수, 부동 소수점, 부울, null 값 외에도 복합적인 데이터 구조인 리스트(시퀀스)와 맵(매핑)을 지원합니다.
4. JSON 상위 집합: 유효한 모든 JSON 파일은 유효한 YAML 파일이기도 합니다. 이는 YAML이 JSON의 기능을 모두 포함하고 있음을 의미합니다.
5. 재사용성: 앵커(&)와 별칭(*)을 사용해 반복되는 데이터 값을 정의하고 재사용할 수 있어 중복을 줄일 수 있습니다.
